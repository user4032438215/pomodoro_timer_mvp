:root {
    --break-lightness: 40%;
    --break-saturation: 10%;
    --color-accent: hsl(var(--hue-primary), 70%, 65%);
    --color-accent-break: hsl(var(--hue-primary), 40%, 70%);
    --color-accent-longbreak: hsl(var(--hue-primary), 30%, 75%);
    --color-bg: hsl(var(--hue-primary), var(--saturation-base), var(--lightness-base));
    --color-bg-break: hsl(var(--hue-primary), var(--break-saturation), var(--break-lightness));
    --color-bg-longbreak: hsl(var(--hue-primary), var(--longbreak-saturation), var(--longbreak-lightness));
    --color-muted: hsl(var(--hue-primary), 10%, 25%);
    --color-subtext: hsl(var(--hue-primary), 10%, 60%);
    --color-text: hsl(0, 0%, 95%);
    --color-text-break: hsl(0, 0%, 90%);
    --color-text-longbreak: hsl(0, 0%, 85%);
    --font-main: 18px;
    --font-neutral: 16px;
    --font-small: 14px;
    --hue-primary: 220;
    --lightness-base: 15%;
    --longbreak-lightness: 50%;
    --longbreak-saturation: 8%;
    --radius: 8px;
    --saturation-base: 15%;

    /* color-palette-likemodernapp */
    /* base-color */
    /* 休憩セッション（break） */
    /* 長めの休憩（longbreak） */
  }
body {
    background-color: var(--color-bg);
    color: var(--color-text);
    font-family: 'Segoe UI', sans-serif;
    padding: 50px;
    text-align: center;
  }
body.session-break {
    background-color: var(--color-bg-break);
    color: var(--color-text-break);
  }
body.session-longbreak {
    background-color: var(--color-bg-longbreak);
    color: var(--color-text-longbreak);
  }
/* タイマー表記に関するレイアウト */
.circle-timer {
    height: 200px;
    margin: auto;
    position: relative;
    width: 200px;
  }
.digital-time {
    color: var(--color-text);
    font-size: 32px;
    font-weight: bold;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
  }
.progress-ring {
    transform: rotate(-90deg);

    /* 12時方向から開始 */
  }
.ring-bg {
    fill: none;
    stroke: #444;
    stroke-width: 10;
  }
.ring-fg {
    fill: none;
    stroke: var(--color-accent);
    stroke-dasharray: 565.48;
    stroke-dashoffset: 0;
    stroke-width: 10;
    transition: stroke-dashoffset 1s linear;

    /* 2πr = 2π×90 */
  }
#sessionStatus {
    color: var(--color-subtext);
    display: block;
    font-size: var(--font-neutral);
    margin-bottom: 12px;
    min-height: 1.5em;

    /* 1行分の高さを確保 */
  }
#timerContainer {
    color: var(--color-text);
    font-size: 64px;
    font-weight: bold;
    margin-bottom: 30px;
  }
#buttonContainer {
    align-items: center;
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 16px;

    /* displayプロパティの flexって値は flex-directionっていう
  別のプロパティとセットで使うことによって意味が決まる。
  display: flex;だけだと横並びになるけど、 flex-direction: column;と組み合わせると縦並びになる。 */
  }
button {
    background-color: var(--color-muted);
    border: none;
    border-radius: var(--radius);
    color: var(--color-text);
    cursor: pointer;
    margin: 5px;
    min-height: 44px;
    min-width: 120px;
  }
.primary-btns button {
    font-size: var(--font-main);
    padding: 12px 24px;
  }
.control-btn {
    align-items: center;
    border-radius: 50%;
    display: flex;
    font-size: 24px;
    height: 48px;
    justify-content: center;
    line-height: 1;
    min-height: unset;
    min-width: unset;
    opacity: 0.6;
    padding: 0;
    width: 48px;

    /* buttonのmin-width: 120px;を無効 */
    /* 同上 */
    /* padding: 8px 16px; */
    /* 余白をなくすことで形が崩れない */
  }
/* 20分を選択したくなるように注目を集めるホバーアニメーション */
/* 拡大縮小アニメーション */
@keyframes pulse {
  0% {
      transform: scale(1);
    }
  50% {
      transform: scale(1.05);
    }
  100% {
      transform: scale(1);
    }
  }
#popup {
    background-color: var(--color-bg);
    border-radius: var(--radius);
  }
/* 20分ボタン：強調 */
.highlight-btn {
    background-color: var(--color-accent);
    border-radius: var(--radius);
    color: white;
    cursor: pointer;
    font-size: var(--font-main);
    margin: 20px;
    transition: background-color 0.4s ease, transform 0.4s ease;

    /* スムーズな変化 */
  }
.highlight-btn:hover {
    animation: pulse 1.2s ease-in-out infinite;
  }
/* 穏やかなホバー反応 */
.neutral-btn {
    background-color: var(--color-bg);
    border-radius: var(--radius);
    color: var(--color-text);
    cursor: pointer;
    font-size: var(--font-main);
    margin: 20px;
    transition: background-color 0.4s ease, transform 0.4s ease;

    /* background-color: #e0e0e0; */
  }
.neutral-btn:hover {
    transform: scale(1.02);

    /* background-color: #d5d5d5; */
  }
button:disabled {
    background-color: #ccc;
    color: #666;
    cursor: not-allowed;
    opacity: 0.6;
  }
.work-icon {
    font-size: 24px;
    margin: 4px;
  }
dialog {
    background-color: var(--color-bg);
    border: var(--radius);
    border: none;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    color: var(--color-text);
    font-size: var(--font-neutral);
    min-height: 200px;
    min-width: 550px;
    padding: 20px;

    /* animationの影響を小さくするためにデフォルトより大きくする */
  }
dialog::backdrop {
    background: rgba(0, 0, 0, 0.3);
    justify-content: center;
  }
.dialog-btn {
    margin-top: 20px;
  }
/* レスポンシブ対応 */
@media (max-width: 480px) {
  #buttonContainer {
      gap: 8px;
      padding: 8px;
    }
  button {
      font-size: var(--font-neutral);
      min-width: 100%;
    }
  #timerContainer {
      font-size: 48px;
    }
  dialog {
      font-size: var(--font-neutral);
      min-width: auto;
      padding: 16px;
      width: 90%;
    }
  .dialog-btn {
      display: flex;
      flex-direction: column;
      gap: 12px;
      margin-top: 16px;
    }
  .highlight-btn,
  .neutral-btn {
      font-size: var(--font-neutral);
      margin: 0;
      width: 100%;
    }
  #sessionStatus {
      font-weight: bold;
      text-align: center;
    }
      /* スマホサイズ */
    }